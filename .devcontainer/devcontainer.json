{
    "name": "FLASX Dev Container",
    "build": {
        "dockerfile": "../Dockerfile",
        "context": "..",
        "args": {
            "INSTALL_DEV": "true"
        }
    },
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind",
    "workspaceFolder": "/workspace",
    "remoteUser": "app",
    "containerEnv": {
        "PATH": "/venv/bin:${PATH}",
        "VIRTUAL_ENV": "/venv",
        "SQLDB_URL": "sqlite+aiosqlite:///./data/database.db",
        "SQL_CONNECTION_STRING": "sqlite+aiosqlite:///./data/database.db",
        "ENVIRONMENT": "development"
    },
    "mounts": [
        "source=${localWorkspaceFolder}/data,target=/workspace/data,type=bind"
    ],
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.pylint",
                "ms-python.black-formatter",
                "ms-python.isort",
                "ms-python.mypy-type-checker",
                "ms-python.debugpy",
                "ms-toolsai.jupyter",
                "ms-vscode.vscode-json",
                "ms-azuretools.vscode-docker",
                "github.copilot",
                "github.copilot-chat",
                "redhat.vscode-yaml",
                "tamasfe.even-better-toml",
                "charliermarsh.ruff"
            ],
            "settings": {
                "python.pythonPath": "/venv/bin/python3",
                "python.defaultInterpreterPath": "/venv/bin/python3",
                "python.formatting.provider": "black",
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "python.testing.pytestEnabled": true,
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "python.testing.autoTestDiscoverOnSaveEnabled": true,
                "python.testing.unittestEnabled": false,
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit"
                },
                "python.terminal.activateEnvironment": false,
                "terminal.integrated.defaultProfile.linux": "bash"
            }
        }
    },
    "forwardPorts": [
        8000
    ],
    "portsAttributes": {
        "8000": {
            "label": "FastAPI App",
            "onAutoForward": "notify"
        }
    },
    "postCreateCommand": "cd /workspace && mkdir -p data && . /venv/bin/activate && poetry install --with dev",
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {}
    },
    "runArgs": [
        "--env-file",
        ".env"
    ]
}